card(1,"CLUBS", 1).           %fiori
card(2, "DIAMONDS", 1).
card(3, "HEARTS", 1). 
card(4, "SPADES" , 1).      %picche  
           
card(5, "CLUBS", 2).
card(6, "DIAMONDS", 2).
card(7, "HEARTS", 2).
card(8, "SPADES" , 2).

card(9, "CLUBS", 3).
card(10, "DIAMONDS", 3).
card(11, "HEARTS", 3).
card(12, "SPADES" , 3).

card(13, "CLUBS", 4).
card(14, "DIAMONDS", 4).
card(15, "HEARTS", 4).
card(16, "SPADES" , 4).

card(17, "CLUBS", 5).
card(18, "DIAMONDS", 5).
card(19, "HEARTS", 5).
card(20, "SPADES" , 5).

card(21, "CLUBS", 6).
card(22, "DIAMONDS", 6).
card(23, "HEARTS", 6).
card(24, "SPADES" , 6).

card(25, "CLUBS", 7).
card(26, "DIAMONDS", 7).
card(27, "HEARTS", 7).
card(28, "SPADES" , 7).

card(29, "CLUBS", 8).
card(30, "DIAMONDS", 8).
card(31, "HEARTS", 8).
card(32, "SPADES" , 8).

card(33, "CLUBS", 9).
card(34, "DIAMONDS", 9).
card(35, "HEARTS", 9).
card(36, "SPADES" , 9).

card(37, "CLUBS", 10).
card(38, "DIAMONDS", 10).
card(39, "HEARTS", 10).
card(40, "SPADES" , 10).

card(41, "CLUBS", 11).  %j
card(42, "DIAMONDS", 11).
card(43, "HEARTS", 11).
card(44, "SPADES" , 11).

card(45, "CLUBS", 12).
card(46, "DIAMONDS", 12).
card(47, "HEARTS", 12).
card(48, "SPADES" , 12).

card(49, "CLUBS", 13).
card(50, "DIAMONDS", 13).
card(51, "HEARTS", 13).
card(52, "SPADES" , 13).


moveToCe(C,X) | noToCe(C,X):-spostabileInCe(C),cell(C1,X),C1=53.
moveToFi(C,F) | noToFi(C,F):-spostabileInF(C,F).
moveToCo(Car,Col)|noToCo(Car,Col):-spostabileInCo(Car,Col).
moveFromeCeToColumn(Cell,Column)|no(Cell,Column):-spostabileDaCellaAColonna(Cell,Column).
moveFromeCeToFinish(Card,Finish)|noMo(Card,Finish):-spostabileDaCellaAFinish(Card,Finish).

spostabile(C):-spostabileInCe(C).
spostabile(C):-spostabileInF(C,F).
spostabile(C):-spostabileInCo(C,F).

%regole non scritte
mossa(C,X):-moveToCe(C,X).
mossa(C,F):-moveToFi(C,F).
mossa(C,F):-moveToCo(C,F).
mossa(C,F):-moveFromeCeToColumn(C,F).
mossa(C,F):-moveFromeCeToFinish(C,F).

cartaMossa(C):-moveToCe(C,X).
cartaMossa(C):-moveToFi(C,F).
cartaMossa(C):-moveToCo(C,F).
cartaMossa(C):-moveFromeCeToColumn(C,F).
cartaMossa(C):-moveFromeCeToFinish(C,F).

%devo fare esattamnete una sola mossa 
:-#count{C,X:mossa(C,X)}<1.
:-#count{C,X:mossa(C,X)}>1.

%se posso mettere una carta nelle finish devo metterla 
:-spostabileInF(C,F),moveToCe(C1,X).
:-spostabileInF(C,F),moveToCo(Car,Col).
:-spostabileInF(C,F),moveFromeCeToColumn(Cell,Column).
:-spostabileDaCellaAFinish(F,C),moveFromeCeToColumn(Col,C1).
:-spostabileDaCellaAFinish(F,C),moveToCe(C1,X).
:-spostabileDaCellaAFinish(F,C),moveToCo(C1,X).













%---------------------------------------------------------------------------------------------------------
%:~column(Card,P,Column),colonnaConProssimaIstantanea(Column), noToCo(Card,Col),numeroCarte(N),N<30. [2:5]

%:~column(Card,P,Column),colonnaConProssimaIstantanea(Column), noToCe(Card,Cel),numeroCarte(N),N>30. [2:5]

%:~spostabileInCo(Car,Col),prossimaCarta(C),column(C,P1,Col),column(Car,P,Col),P1=P-1, noToCo(Car,Colo),numeroCarte(N),N<30. [3:5]
%-------------------------------------------------------------------------------------------


											%6
											
											
%libero le carte che si possono mettere nelle finish con una sola mossa
prossimaCarta(Card):-finishedCell(C,S,F),card(Card,S,V1),card(C,S,V),V=V1+1.
colonnaConProssimaIstantanea(Col):-spostabile(Spostabile),column(Spostabile,P,Col),column(C,P1,Col),prossimaCarta(C),P1=P-1.

:~column(Card,P,Column),colonnaConProssimaIstantanea(Column),spostabile(Card),not cartaMossa(Card).[1:6]








                                      %5
                                      
%se ho una scala devo cercare di non separarla
scala(C):-card(C,S,V),card(C1,S1,V1),colore(C,Colore),colore(C1,Colore1),Colore!=Colore1,column(C,P,Col),column(C1,P1,Col),P=P1+1,V=V1-1.
scala(C):-card(C,S,V),card(C1,S1,V1),colore(C,Colore),colore(C1,Colore1),Colore!=Colore1,column(C,P,Col),column(C1,P1,Col),P=P1-1,V=V1+1.
colore(C,"ROSSO"):-card(C,"DIAMONDS",V).
colore(C,"ROSSO"):-card(C,"HEARTS",V).
colore(C,"NERO"):-card(C,"SPADES",V).
colore(C,"NERO"):-card(C,"CLUBS",V).

:~scala(C),moveToCo(C,Column),N>29,numeroCarte(N). [1:5]

:~scala(C),moveToCe(C,Column). [1:5]


:~moveToCe(C,X),numeroCarte(N),N>29. [1:5]


                                      %4

colonnaNonVuota(C):-column(Card,Pos,C).
:~not colonnaNonVuota(C),noToCo(Car,C),card(Car,S,V),numeroCarte(N),N>29. [V:4]
:~not colonnaNonVuota(C),no(Cell,C),card(Car,S,V),cell(Car,Cell). [V:4]



										%3
:~moveToCe(C,X),numeroCarte(N),N<30. [1:2]

%dal momento in cui decido di spostare in colonna devo preferire spostamenti che liberano carte da mettere in finish
prossimaCarta(C):-finishedCell(Card,S,F),card(Card,S,V),card(C,S,V1),V1=V+1.
colonnaConProssima(Col,P):-column(C,P,Col),prossimaCarta(C).
:~column(Card,P,Column),colonnaConProssima(Column,Position), noToCo(Card,Col),not colonnaConProssimaIstantanea(Column). [Position:3]

%dal momento in cui decido di spostare in cella devo preferire spostamenti che liberano carte da mettere in finish
:~column(Card,P,Column),colonnaConProssima(Column,Position), noToCe(Card,Cel),not colonnaConProssimaIstantanea(Column) . [Position:3]

%se posso togliere una carta dalle celle vuote, devo cercare di farlo

:~spostabileDaCellaAColonna(Cell,Column),no(Cell,Column),numeroCarte(N),N>29. [1:3]


                                        %2


  %se devo spostare in cella e c'è una carta che libererebbe una colonna completamente, a partità di costi lo faccio
colonnaConUnaCarta(Column):-column(C,P,Column),#count{Card:column(Card,P1,Column)}=1.
liberaColonna(C):-spostabile(C),column(C,P,Col),colonnaConUnaCarta(Col).
:~liberaColonna(Card),noToCe(Card,C). [1:2]

:~scala(C),moveToCo(C,Column),N<30,numeroCarte(N). [1:2]

:~noToCo(C,Co),card(C,S,V),N<35,numeroCarte(N).[V:2]

%se posso togliere una carta dalle celle vuote, devo cercare di farlo
:~spostabileDaCellaAColonna(Cell,Column),no(Cell,Column),numeroCarte(N),N>29. [1:2]





%sempre a parità,preferisco una carta di valore più basso
:~moveToCe(C,Cell),card(C,S,V). [V:1]


























										%livello 3








										%livello 2: calcolo costo delle varie mosse



										%livello 1






